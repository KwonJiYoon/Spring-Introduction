
2022.08.06.토

🟨 정적 컨텐츠
    : 파일을 그대로 웹 브라우저에 내려줌.

    👉🏻 동작

        1. 내장 톰켓 서버로 URL 요청
            1-1. 이름이 같은 컨트롤러가 있는지 확인
            1-2. 컨트롤러가 없으면 파일이 존재하는지 확인
            1-3. 파일이 존재하면 그대로 반환


📄 src/main/resources/static/hello-static.html


🟨 MVC : Model, View, Controller

    👉🏻 동작 방식
        1. 내장 톰켓 서버에 url 요청
        2. 컨트롤러에 매핑 되어있는 메소드 호출
        3. model에 파라미터로 받은 값을 넣고 템플릿을 리턴
        4. viewResolver가 Thymeleaf에 요청
        5. Thymeleaf가 랜더링을 해서 변환한 html을 웹브라우저에 반환

    ‼️️ @RequestParam ‼️
        👉🏻 한 개의 HTTP 요청 파라미터를 받기 위해서 사용한다.
        👉🏻 필수 여부 default 값이 "true"이기 때문에, 파라미터가 전송되지 않으면 400 에러 발생한다.
            👉🏻 반드시 필요한 값이 아니라면? required = false 설정 필요 !!

        👉🏻 @RequestParam("가져올 데이터 이름") [데이터 타입] [가져온 데이터를 담을 변수 명]

📄 src/main/java/controller/HelloController.helloMvc (param: String name)
📄 src/main/resources/templates/hello-template.html (Thymeleaf엔진 처리)



🟨 API

    ‼️ @ResponseBody ‼️
         👉🏻 HTTP의 BODY에 문자 내용을 직접 반환
         👉🏻 'viewResolver' 대신 'HttpMessageConverter'가 동작
         👉🏻 JSON 형태로 반환

    ‼️ JSON ‼️
        👉🏻 JavaScript Object Notation
        👉🏻 데이터를 전송, 저장할 때 많이 쓰이는 경량의 데이터 교환 방식
        👉🏻 자바스크립트 객체의 형식을 기반으로 만들어짐
        👉🏻 key / value로 구성 되어있음
        👉🏻 JSON.parse(JSON으로 변환할 문자열) : JSON 형식의 텍스트를 자바스크립트로 변환
        👉🏻 JSON.stringify(JSON 문자열로 변환할 값) : 자바스크립트 객체를 JSON 텍스트로 변환

📄 src/main/java/controller/HelloController.helloString (param: String name)
📄 src/main/java/controller/HelloController.helloApi (param: String name)

